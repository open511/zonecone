<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RwNotification', 'doctrine');

/**
 * BaseRwNotification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $rw_id
 * @property integer $route_id
 * @property boolean $is_sent
 * @property string $rw_status
 * @property RwRoadwork $RwRoadwork
 * @property RwUserRoute $RwUserRoute
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer        getId()          Returns the current record's "id" value
 * @method integer        getUserId()      Returns the current record's "user_id" value
 * @method integer        getRwId()        Returns the current record's "rw_id" value
 * @method integer        getRouteId()     Returns the current record's "route_id" value
 * @method boolean        getIsSent()      Returns the current record's "is_sent" value
 * @method string         getRwStatus()    Returns the current record's "rw_status" value
 * @method RwRoadwork     getRwRoadwork()  Returns the current record's "RwRoadwork" value
 * @method RwUserRoute    getRwUserRoute() Returns the current record's "RwUserRoute" value
 * @method sfGuardUser    getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method RwNotification setId()          Sets the current record's "id" value
 * @method RwNotification setUserId()      Sets the current record's "user_id" value
 * @method RwNotification setRwId()        Sets the current record's "rw_id" value
 * @method RwNotification setRouteId()     Sets the current record's "route_id" value
 * @method RwNotification setIsSent()      Sets the current record's "is_sent" value
 * @method RwNotification setRwStatus()    Sets the current record's "rw_status" value
 * @method RwNotification setRwRoadwork()  Sets the current record's "RwRoadwork" value
 * @method RwNotification setRwUserRoute() Sets the current record's "RwUserRoute" value
 * @method RwNotification setSfGuardUser() Sets the current record's "sfGuardUser" value
 * 
 * @package    roadwork
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRwNotification extends sfMapFishRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rw_notification');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'rw_notification_id',
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('rw_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('route_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('is_sent', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('rw_status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('RwRoadwork', array(
             'local' => 'rw_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('RwUserRoute', array(
             'local' => 'route_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}