<?php

/**
 * RwRoadwork
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    roadwork
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class RwRoadwork extends BaseRwRoadwork
{



 public static $geometryColumn = array('geom' => 4326);
 
 static public $rwStatusEnum = array(
   'is_updated' => 'u',
   'is_new' => 'n',
   'is_deleted' => 'd',
   'is_deactivated' => 'a',
   'is_reactivated' => 'r',
   'no_change' => '0',
   'error'  => 'e'
 );

 public $wasNew = false;
 public $rwStatus;  //must be a value from $rwStatusEnum
 public $updatedFields; 
 
 public function wasNew(){
   return $wasNew;
 }

  public function saveWithGeom($WktGeom){

    try {
      $this->save(); 
	  Doctrine_Core::getTable('RwRoadwork')->updateGeometry($WktGeom, $this->getId());
	  } 
	  catch (Exception $e) {
		//TODO : mieux gérer le catch ici... Notamment gérer le fait que si update ne marche pas, 
		//l'entrée n'aura pas de géomtrie...
		    echo 'Exception reçue : ',  $e->getMessage(), "\n";
	  }
	
	//TODO mettre une valeur de retour...
}
 
 public function getPublicAttributes(){

	 $geom = $this->getGeom();

//TODO Ameliorer ceci avec une regex...	 
    if (substr($geom, 0, 10) == "LINESTRING"){
      $type = "LINESTRING";
	   $theline = substr(substr($geom, 0, strlen($geom)-1), 11);
	   $coordinates = explode(",", $theline);
	 } else {
	 	$type = "POINT"; 
	   $theline = substr(substr($geom, 0, strlen($geom)-1), 6);
	   $coordinates = explode(",", $theline);	
	    }	 

		if (is_null($this->getStartDate())){
			$startDate = $this->getStartDateText();
		} else {
			$startDate = $this->getStartDate();		
		}

		if (is_null($this->getEndDate())){
			$endDate = $this->getEndDateText();
		} else {
			$endDate = $this->getEndDate();		
		}
		
		if (is_null($this->getSeverity())){
			$severity = 2;
		} else {
			$severity = $this->getSeverity();
		}
		

    $publicArray = array(
      'id'           => $this->getId(),
      'name'         => $this->getName(),
      'type'         => $type,
      'coordinates'  => $coordinates,
      'startDate'	 => $startDate,
      'endDate'	     => $endDate,
      'severity'     => $severity,
	  'is_active'    => $this->getIsActive(),
	  'is_night'	 => $this->getIsNight(),
	  'is_uncertain' => $this->getIsUncertain(),
     );
   
     return $publicArray;    
 }


  public function getFormattedStartDate(){
                if (is_null($this->getStartDate())){
                        $startDate = $this->getStartDateText();
                } else {
                        //DateTime object seems not to support fr locale, so we have to go thru strftime
                        $startDate = strftime('%e %B %Y', $this->getDateTimeObject('start_date')->format('U'));
                }

    return $startDate;

  }

  public function getFormattedEndDate(){

                if (is_null($this->getEndDate())){
                        $endDate = $this->getEndDateText();
                } else {
                         $endDate = strftime('%e %B %Y', $this->getDateTimeObject('end_date')->format('U'));
                }
    return $endDate;
  }
}
