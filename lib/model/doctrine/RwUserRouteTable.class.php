<?php

/**
 * RwUserRouteTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RwUserRouteTable extends sfMapFishTable 
{
    /**
     * Returns an instance of this class.
     *
     * @return object RwUserRouteTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('RwUserRoute');
    }

    /**
     * Returns an instance of this class.
     * Same as getTable by fetchs the geometry column as a WKT entity
     * Parameter ID allow to search a record by its id
     *
     * @return object RwUserRouteTable
     */
    public function getTableWithGeom($id = null) {
    	
      $q = mfQuery::create('geom', 4326)
		  ->select('*')
        ->from('RwUserRoute');

      if(isset($id)){
      	$q->addWhere("id = ?", $id);	
      }
	     
	   return $q->execute();     
	 }
		
	
	//TODO Modif getTableWithGeom pour etre appele par getTableByParameter par exemple et par d'autres fonction
	public function getTableByParameter($param, $value){
		
      $q = mfQuery::create('geom', 4326)
		  ->select('*')
        ->from('RwUserRoute');

      if(isset($param)){
      	$q->addWhere($param . " = ?", $value);	
      }

	   return $q->execute();
	}

    /**
     * Updates the geometry column using WKT statement.
     * As Doctrine cannot insert geometry fields, new records are inserted without the geom
     * Then, this function allow to insert the geometry
     *
     * @return ??
     */    
	 public function updateGeometry ($geometry, $id){
	 	
	 	 $q = $this->createQuery('a')
          ->update()
          ->set('geom', 'GEOMETRYFROMTEXT(?, ?)', array($geometry, '4326'))
          ->where($this->getIdentifier().' = ?', $id);
          
       return $q->execute();
	 	
	 }    

    /**
     * Selects all user routes close enough from a the roadwork provided as argument
     *
     * @return object RwUserRouteTable
     */      
    public function getImpactedUserRoutes ($roadwork){
 	
      $q = $this->createQuery('r')
        ->leftJoin('r.RwRoadwork r2 ON ST_DWithin(r.geom, r2.geom, 0.002)')
        ->where('r2.id = ' . $roadwork->id);

      return $q->execute();
      
    }
}
